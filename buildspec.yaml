version: 0.2

env:
  secrets-manager:
    ETL_PROJECT_ACCESS_KEY_ID: "arn:aws:secretsmanager:us-east-1:690469543125:secret:etl-project-access-key-id-eUT3Wr"
    ETL_PROJECT_SECRET_ACCESS_KEY: "arn:aws:secretsmanager:us-east-1:690469543125:secret:etl-project-secret-access-key-km3iyd"

phases:
  pre_build:
    commands:
      # Adjust the environment
      - apt-get update -y && apt-get install -y jq
      - set -e

      # Extract raw values
      - ETL_PROJECT_ACCESS_KEY_ID = $(echo $ETL_PROJECT_ACCESS_KEY_ID | jq -r '.ETL_PROJECT_ACCESS_KEY_ID')
      - ETL_PROJECT_SECRET_ACCESS_KEY = $(echo $ETL_PROJECT_SECRET_ACCESS_KEY | jq -r '.ETL_PROJECT_SECRET_ACCESS_KEY')
      
      # - COMMIT=$(git rev-parse HEAD)
      # - TAG=$(git describe --exact-match --tags $COMMIT 2>/dev/null || echo "none")

      # - if [ "$TAG" == "none" ]; then
      #     echo "No tag found. Exiting build.";
      #     exit 1;
      #   fi

  build:
    commands:
      # Write env file
      - echo "# AWS Configuration" > env.py
      - echo "AWS_ACCESS_KEY_ID=\"$ETL_PROJECT_ACCESS_KEY_ID\"" >> env.py
      - echo "AWS_SECRET_ACCESS_KEY=\"$ETL_PROJECT_SECRET_ACCESS_KEY\"" >> env.py
      
      # Change file permissions
      - chmod +x ./push_to_ecr.sh

      # Build and push docker image
      - ./push_to_ecr.sh --container-service "docker"

post_build:
  commands:
    - echo "Executing post-build commands"
