AWSTemplateFormatVersion: "2010-09-09"

Resources:
  # Networking Resources
  DhcpOptions:
    Type: "AWS::EC2::DHCPOptions"
    Properties:
      DhcpConfigurations:
        - Key: "domain-name"
          Values:
            - "ec2.internal"
        - Key: "domain-name-servers"
          Values:
            - "AmazonProvidedDNS"

  ETLProjectVPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "172.31.0.0/16"
      DhcpOptionsId: !Ref DhcpOptions
      Tags:
        - Key: "Name"
          Value: "etl-project-vpc"
      InstanceTenancy: "default"

  ETLProjectInternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: "Name"
          Value: "etl-project-internet-gateway"

  AttachETLProjectGateway:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref ETLProjectVPC
      InternetGatewayId: !Ref ETLProjectInternetGateway

  ETLProjectRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref ETLProjectVPC
      Tags:
        - Key: "Name"
          Value: "etl-project-route-table"

  ETLProjectRoute:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref ETLProjectRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref ETLProjectInternetGateway

  ETLProjectLocalRoute:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref ETLProjectRouteTable
      DestinationCidrBlock: "172.31.0.0/16"
      GatewayId: "local"

  ETLProjectSubnetA:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: "us-east-1a"
      CidrBlock: "172.31.0.0/20"
      VpcId: !Ref ETLProjectVPC
      MapPublicIpOnLaunch: false
      Tags:
        - Key: "Name"
          Value: "etl-project-subnet-a"

  ETLProjectSubnetB:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: "us-east-1b"
      CidrBlock: "172.31.16.0/20"
      VpcId: !Ref ETLProjectVPC
      MapPublicIpOnLaunch: false
      Tags:
        - Key: "Name"
          Value: "etl-project-subnet-b"

  ETLProjectSubnetC:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: "us-east-1c"
      CidrBlock: "172.31.32.0/20"
      VpcId: !Ref ETLProjectVPC
      MapPublicIpOnLaunch: false
      Tags:
        - Key: "Name"
          Value: "etl-project-subnet-c"

  ETLProjectSecurityGroupETLProject:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: "etl-project-security-group"
      VpcId: !Ref ETLProjectVPC
      Description: "ETL project security group"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: "0.0.0.0/0"
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: "0.0.0.0/0"
        - IpProtocol: tcp
          FromPort: 5000
          ToPort: 5000
          CidrIp: "0.0.0.0/0"
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: "0.0.0.0/0"
      SecurityGroupEgress:
        - IpProtocol: "-1"
          CidrIp: "0.0.0.0/0"
      Tags:
        - Key: "Name"
          Value: "etl-project-security-group"

  ETLProjectNetworkACL:
    Type: "AWS::EC2::NetworkAcl"
    Properties:
      VpcId: !Ref ETLProjectVPC
      Tags:
        - Key: "Name"
          Value: "etl-project-network-acl"

  ETLProjectNetworkACLAssociation:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      SubnetId: !Ref ETLProjectSubnetA
      NetworkAclId: !Ref ETLProjectNetworkACL

  ETLProjectNetworkACLEntry1:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      NetworkAclId: !Ref ETLProjectNetworkACL
      RuleNumber: 100
      Protocol: "-1"
      RuleAction: "allow"
      Egress: true
      CidrBlock: "0.0.0.0/0"

  ETLProjectNetworkACLEntry2:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      NetworkAclId: !Ref ETLProjectNetworkACL
      RuleNumber: 32767
      Protocol: "-1"
      RuleAction: "deny"
      Egress: true
      CidrBlock: "0.0.0.0/0"

  ETLProjectNetworkACLEntry3:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      NetworkAclId: !Ref ETLProjectNetworkACL
      RuleNumber: 100
      Protocol: "-1"
      RuleAction: "allow"
      Egress: false
      CidrBlock: "0.0.0.0/0"

  ETLProjectNetworkACLEntry4:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties:
      NetworkAclId: !Ref ETLProjectNetworkACL
      RuleNumber: 32767
      Protocol: "-1"
      RuleAction: "deny"
      Egress: false
      CidrBlock: "0.0.0.0/0" ######################

  # IAM Roles
  ECSInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "ecsInstanceRole"
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2008-10-17"
        Statement:
          - Sid: ""
            Effect: "Allow"
            Principal:
              Service: "ec2.amazonaws.com"
            Action: "sts:AssumeRole"
      MaxSessionDuration: 3600

  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "ecsTaskExecutionRole"
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2008-10-17"
        Statement:
          - Sid: ""
            Effect: "Allow"
            Principal:
              Service: "ecs-tasks.amazonaws.com"
            Action: "sts:AssumeRole"
      MaxSessionDuration: 3600

  AWSQuickSetupStackSetLocalAdministrationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "AWS-QuickSetup-StackSet-Local-AdministrationRole"
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "cloudformation.amazonaws.com"
            Action: "sts:AssumeRole"
      MaxSessionDuration: 3600

  AWSQuickSetupStackSetLocalExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "AWS-QuickSetup-StackSet-Local-ExecutionRole"
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS: "arn:aws:iam::690469543125:role/AWS-QuickSetup-StackSet-Local-AdministrationRole"
            Action: "sts:AssumeRole"
      MaxSessionDuration: 3600

  AWSCodePipelineServiceRoleUSEast1ETLProjectPipeline:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "AWSCodePipelineServiceRole-us-east-1-etl-project-pipeline"
      Path: "/service-role/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "codepipeline.amazonaws.com"
            Action: "sts:AssumeRole"
      MaxSessionDuration: 3600

  AWSServiceRoleForAmazonSSM:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "AWSServiceRoleForAmazonSSM"
      Path: "/aws-service-role/ssm.amazonaws.com/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "ssm.amazonaws.com"
            Action: "sts:AssumeRole"
      Description: "Provides access to AWS Resources managed or used by Amazon SSM."
      MaxSessionDuration: 3600

  AWSServiceRoleForApplicationAutoScalingECSService:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "AWSServiceRoleForApplicationAutoScaling_ECSService"
      Path: "/aws-service-role/ecs.application-autoscaling.amazonaws.com/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "ecs.application-autoscaling.amazonaws.com"
            Action: "sts:AssumeRole"
      MaxSessionDuration: 3600

  AWSServiceRoleForAutoScaling:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "AWSServiceRoleForAutoScaling"
      Path: "/aws-service-role/autoscaling.amazonaws.com/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "autoscaling.amazonaws.com"
            Action: "sts:AssumeRole"
      Description: "Default Service-Linked Role enables access to AWS Services and Resources used or managed by Auto Scaling"
      MaxSessionDuration: 3600

  AWSServiceRoleForEC2Spot:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "AWSServiceRoleForEC2Spot"
      Path: "/aws-service-role/spot.amazonaws.com/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "spot.amazonaws.com"
            Action: "sts:AssumeRole"
      Description: "Default EC2 Spot Service Linked Role"
      MaxSessionDuration: 3600

  AWSServiceRoleForECS:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "AWSServiceRoleForECS"
      Path: "/aws-service-role/ecs.amazonaws.com/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "ecs.amazonaws.com"
            Action: "sts:AssumeRole"
      Description: "Role to enable Amazon ECS to manage your cluster."
      MaxSessionDuration: 3600

  AWSServiceRoleForElasticLoadBalancing:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "AWSServiceRoleForElasticLoadBalancing"
      Path: "/aws-service-role/elasticloadbalancing.amazonaws.com/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "elasticloadbalancing.amazonaws.com"
            Action: "sts:AssumeRole"
      Description: "Allows ELB to call AWS services on your behalf."
      MaxSessionDuration: 3600

  AWSServiceRoleForSupport:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "AWSServiceRoleForSupport"
      Path: "/aws-service-role/support.amazonaws.com/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "support.amazonaws.com"
            Action: "sts:AssumeRole"
      Description: "Enables resource access for AWS to provide billing, administrative and support services"
      MaxSessionDuration: 3600

  ECSAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: "Infra-ECS-Cluster-etl-project-cluster-5584ebc1-ECSAutoScalingGroup-8JTMfeLGhqNF"
      MinSize: 0
      MaxSize: 2
      DesiredCapacity: 0
      DefaultCooldown: 300
      AvailabilityZones:
        - "us-east-1a"
        - "us-east-1b"
        - "us-east-1c"
      VPCZoneIdentifier: !Ref ETLProjectPrivateSubnets
      HealthCheckType: "EC2"
      HealthCheckGracePeriod: 300
      LaunchConfigurationName: !Ref ECSLaunchConfig
      Tags:
        - Key: "Name"
          Value: "Infra-ECS-Cluster-etl-project-cluster-5584ebc1"
          PropagateAtLaunch: true

  ECSLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: true
      BlockDeviceMappings:
        - DeviceName: "/dev/xvda"
          Ebs:
            VolumeSize: 30
            VolumeType: "gp2"
      IamInstanceProfile: !Ref ECSInstanceRole
      ImageId: "ami-xxxxxxxxxxxxxxxxx"  # Specify the appropriate AMI ID
      InstanceType: "t2.micro"
      KeyName: "your-key-pair-name"
      SecurityGroups:
        - !Ref ETLProjectSecurityGroupETLProject

  ECSAutoScalingPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref ECSAutoScalingGroup
      PolicyName: "ECSManagedAutoScalingPolicy-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"  # Replace with a unique name
      PolicyType: "TargetTrackingScaling"
      EstimatedInstanceWarmup: 300
      TargetTrackingConfiguration:
        CustomizedMetricSpecification:
          MetricName: "CapacityProviderReservation"
          Namespace: "AWS/ECS/ManagedScaling"
          Dimensions:
            - Name: "CapacityProviderName"
              Value: "Infra-ECS-Cluster-etl-project-cluster-5584ebc1-EC2CapacityProvider-zk6NMnaHlu1V"
            - Name: "ClusterName"
              Value: "etl-project-cluster"
          Statistic: "Average"
        TargetValue: 100.0
        DisableScaleIn: false
      Alarms:
        - !Sub "TargetTracking-${ECSAutoScalingGroup}-AlarmHigh-${AWS::StackName}"
        - !Sub "TargetTracking-${ECSAutoScalingGroup}-AlarmLow-${AWS::StackName}"
      Enabled: true

  # CodeBuild Project
  ETLProjectBuildProject:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: "etl-project-build-project"
      Description: "ETL Project Build Project"
      ServiceRole: "arn:aws:iam::690469543125:role/service-role/codebuild-etl-project-build-project-service-role"
      Artifacts:
        Type: "CODEPIPELINE"
        Name: "etl-project-build-project"
        Packaging: "NONE"
        EncryptionDisabled: false
      BadgeEnabled: false
      Cache:
        Type: "NO_CACHE"
      Environment:
        Type: "LINUX_CONTAINER"
        Image: "aws/codebuild/amazonlinux2-x86_64-standard:4.0"
        ComputeType: "BUILD_GENERAL1_SMALL"
        EnvironmentVariables: []
        PrivilegedMode: true
        ImagePullCredentialsType: "CODEBUILD"
      Source:
        Type: "CODEPIPELINE"
        InsecureSsl: false
      TimeoutInMinutes: 60
      QueuedTimeoutInMinutes: 480
      EncryptionKey: "arn:aws:kms:us-east-1:690469543125:alias/aws/s3"
      Tags: []
      Created: "2023-12-23T15:43:06.367000+00:00"
      LastModified: "2023-12-28T00:21:15.539000+00:00"
      LogsConfig:
        CloudWatchLogs:
          Status: "ENABLED"
        S3Logs:
          Status: "DISABLED"
          EncryptionDisabled: false
      FileSystemLocations: []
      ProjectVisibility: "PRIVATE"

  # CodePipeline
  ETLProjectPipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name: "etl-project-pipeline"
      RoleArn: "arn:aws:iam::690469543125:role/service-role/AWSCodePipelineServiceRole-us-east-1-etl-project-pipeline"
      ArtifactStore:
        Type: "S3"
        Location: "codepipeline-us-east-1-459445715306"
      Stages:
        - Name: "Source"
          Actions:
            - Name: "Source"
              ActionTypeId:
                Category: "Source"
                Owner: "AWS"
                Provider: "CodeStarSourceConnection"
                Version: "1"
              RunOrder: 1
              Configuration:
                BranchName: "master"
                ConnectionArn: "arn:aws:codestar-connections:us-east-1:690469543125:connection/dd762c88-4f7b-46a4-adc5-08e609a4f75a"
                FullRepositoryId: "StevenB96/aws-etl-project"
                OutputArtifactFormat: "CODE_ZIP"
              OutputArtifacts:
                - Name: "SourceArtifact"
              InputArtifacts: []
              Region: "us-east-1"
              Namespace: "SourceVariables"
        - Name: "Approval"
          Actions:
            - Name: "etl-project-deployment-approval"
              ActionTypeId:
                Category: "Approval"
                Owner: "AWS"
                Provider: "Manual"
                Version: "1"
              RunOrder: 1
              Configuration: {}
              OutputArtifacts: []
              InputArtifacts: []
              Region: "us-east-1"
        - Name: "Build"
          Actions:
            - Name: "Build"
              ActionTypeId:
                Category: "Build"
                Owner: "AWS"
                Provider: "CodeBuild"
                Version: "1"
              RunOrder: 1
              Configuration:
                ProjectName: "etl-project-build-project"
              OutputArtifacts:
                - Name: "BuildArtifact"
              InputArtifacts:
                - Name: "SourceArtifact"
              Region: "us-east-1"
              Namespace: "BuildVariables"
        - Name: "Deploy"
          Actions:
            - Name: "Deploy"
              ActionTypeId:
                Category: "Deploy"
                Owner: "AWS"
                Provider: "CodeDeploy"
                Version: "1"
              RunOrder: 1
              Configuration:
                ApplicationName: "etl-project-application"
                DeploymentGroupName: "etl-project-deployment-group"
              OutputArtifacts: []
              InputArtifacts:
                - Name: "BuildArtifact"
              Region: "us-east-1"
              Namespace: "DeployVariables"
      Version: 2
      PipelineType: "V2"

  # CodeDeploy Application
  ETLProjectCodeDeployApplication:
    Type: "AWS::CodeDeploy::Application"
    Properties:
      ApplicationName: "etl-project-application"

  # CodeDeploy Deployment Group
  ETLProjectCodeDeployDeploymentGroup:
    Type: "AWS::CodeDeploy::DeploymentGroup"
    Properties:
      ApplicationName: "etl-project-application"
      DeploymentGroupName: "etl-project-deployment-group"
      ServiceRoleArn: "arn:aws:iam::690469543125:role/service-role/CodeDeploy-service-role"

Outputs:
  ETLProjectSecretAccessKeyId:
    Value: !Ref ETLProjectSecretAccessKey
    Description: "Secret ID for ETL project access key"
